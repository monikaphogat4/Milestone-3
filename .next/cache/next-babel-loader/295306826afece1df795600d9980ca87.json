{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/MainImage.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport sectionInfo from \"../redux/actions/index\";\n\nclass MainImage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"imageRef\", void 0);\n\n    _defineProperty(this, \"textChange\", void 0);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      window.addEventListener(\"scroll\", this.handleScroll);\n      this.imageRef.current.src = \"img/01-hero-lightpass/0000.jpg\";\n      this.fetchData();\n      this.props.updateSectionInfo({\n        sections: [{\n          name: \"01-hero-lightpass\",\n          style: \"white\",\n          text: \"Active Noise Cancellation for immersive sound. Transparency mode for hearing what is happening around you.\"\n        }, {\n          name: \"02-head-bob-turn\",\n          text: \"Arrival of the fittest.\"\n        }, {\n          name: \"03-flip-for-guts\",\n          text: \"Sound that cuts out the noise.\"\n        }, {\n          name: \"04-explode-tips\",\n          text: \"Choose from three sizes of soft, flexible silicone tips that click into place. Find the best fit and get the best sound by using the Ear Tip Fit Test.\"\n        }, {\n          name: \"05-flip-for-nc\",\n          style: \"white\",\n          text: \"Enjoy superior sound quality with Adaptive EQ, which automatically tunes music to the shape of your ear for a rich, consistent listening experience.\"\n        }, {\n          name: \"06-transparency-head\"\n        }, {\n          name: \"07-flip-reveal-guts\",\n          style: \"white\"\n        }, {\n          name: \"08-turn-for-chip\"\n        }, {\n          name: \"09-scoop-turn\",\n          style: \"black\"\n        }, {\n          name: \"10-fall-into-case\",\n          style: \"white\",\n          text: \"Charge wirelessly. Use tirelessly.\"\n        }]\n      });\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    });\n\n    _defineProperty(this, \"handleScroll\", e => {\n      const scrollThreshold = this.state.scrollThreshold;\n      let newIndex;\n      let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n\n      let index = sTop / scrollThreshold;\n      index = Math.floor(index);\n\n      if (index < 148) {\n        this.imageRef.current.src = this.getImagePath(this.props.sections[0].name, index);\n        this.textChange.current.innerHTML = this.props.sections[0].text; //text for each section\n      } else if (index >= 148 && index < 280) {\n        newIndex = index - 148;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[1].name, newIndex);\n        this.textChange.current.innerHTML = this.props.sections[1].text;\n      } else if (index >= 280 && index < 368) {\n        newIndex = index - 280;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[2].name, newIndex);\n        this.textChange.current.innerHTML = this.props.sections[2].text;\n      } else if (index >= 368 && index < 506) {\n        newIndex = index - 368;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[3].name, newIndex);\n        this.textChange.current.src = this.props.sections[3].text;\n      } else if (index >= 506 && index < 645) {\n        newIndex = index - 506;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[4].name, newIndex);\n        this.textChange.current.src = this.props.sections[4].text;\n      } else if (index >= 645 && index < 821) {\n        newIndex = index - 645;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[5].name, newIndex);\n      } else if (index >= 821 && index < 889) {\n        newIndex = index - 821;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[6].name, newIndex);\n      } else if (index >= 889 && index < 978) {\n        newIndex = index - 889;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[7].name, newIndex);\n        this.textChange.current.innerHTML = \"\"; //this section has no text\n      } else if (index >= 978 && index < 1212) {\n        newIndex = index - 978;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[8].name, newIndex);\n      } else {\n        newIndex = index - 1212;\n        this.imageRef.current.src = this.getImagePath(this.props.sections[9].name, newIndex);\n        this.textChange.current.innerHTML = this.props.sections[9].text;\n      }\n    });\n\n    this.handleScroll = this.handleScroll.bind(this);\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.textChange = /*#__PURE__*/React.createRef();\n    this.state = {\n      scrollThreshold: 10\n    };\n  } // on DOM render  display default image\n\n\n  //to create file path to be retrieved from Public folder\n  getImagePath(section, index) {\n    const i = index / 10;\n    let fileName = \"\";\n\n    if (i >= 1) {\n      fileName = index > 99 ? `0${index}` : `00${index}`;\n    } else {\n      fileName = `000${index}`;\n    }\n\n    return `/img/${section}/${fileName}.jpg`;\n  }\n\n  render() {\n    return __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"div-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      ref: this.textChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    })), __jsx(\"img\", {\n      className: \"responsive\",\n      ref: this.imageRef,\n      src: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //select data from store that connected component needs\n\n\nconst mapStateToProps = state => ({\n  sections: state.sectionState.sections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateSectionInfo: data => dispatch(sectionInfo(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainImage);","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/MainImage.tsx"],"names":["React","Component","connect","sectionInfo","MainImage","constructor","props","window","addEventListener","handleScroll","imageRef","current","src","fetchData","updateSectionInfo","sections","name","style","text","removeEventListener","e","scrollThreshold","state","newIndex","sTop","scrollY","index","Math","floor","getImagePath","textChange","innerHTML","bind","createRef","section","i","fileName","render","mapStateToProps","sectionState","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport sectionInfo from \"../redux/actions/index\";\n\nclass MainImage extends Component {\n  imageRef: React.RefObject<HTMLImageElement>;\n  textChange: React.RefObject<HTMLParagraphElement>;\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.imageRef = React.createRef();\n    this.textChange = React.createRef();\n\n    this.state = {\n      scrollThreshold: 10,\n    };\n  }\n\n  // on DOM render  display default image\n  componentDidMount = () => {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.imageRef.current.src = \"img/01-hero-lightpass/0000.jpg\";\n    this.fetchData();\n    this.props.updateSectionInfo({\n      sections: [\n        {\n          name: \"01-hero-lightpass\",\n          style: \"white\",\n          text:\n            \"Active Noise Cancellation for immersive sound. Transparency mode for hearing what is happening around you.\",\n        },\n        { name: \"02-head-bob-turn\", text: \"Arrival of the fittest.\" },\n        { name: \"03-flip-for-guts\", text: \"Sound that cuts out the noise.\" },\n        {\n          name: \"04-explode-tips\",\n          text:\n            \"Choose from three sizes of soft, flexible silicone tips that click into place. Find the best fit and get the best sound by using the Ear Tip Fit Test.\",\n        },\n        {\n          name: \"05-flip-for-nc\",\n          style: \"white\",\n          text:\n            \"Enjoy superior sound quality with Adaptive EQ, which automatically tunes music to the shape of your ear for a rich, consistent listening experience.\",\n        },\n        { name: \"06-transparency-head\" },\n        { name: \"07-flip-reveal-guts\", style: \"white\" },\n        { name: \"08-turn-for-chip\" },\n        { name: \"09-scoop-turn\", style: \"black\" },\n        {\n          name: \"10-fall-into-case\",\n          style: \"white\",\n          text: \"Charge wirelessly. Use tirelessly.\",\n        },\n      ],\n    });\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  };\n\n  //to create file path to be retrieved from Public folder\n  getImagePath(section, index) {\n    const i = index / 10;\n    let fileName = \"\";\n\n    if (i >= 1) {\n      fileName = index > 99 ? `0${index}` : `00${index}`;\n    } else {\n      fileName = `000${index}`;\n    }\n    return `/img/${section}/${fileName}.jpg`;\n  }\n\n  handleScroll = (e) => {\n    const scrollThreshold = this.state.scrollThreshold;\n    let newIndex;\n\n    let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n    let index = sTop / scrollThreshold;\n\n    index = Math.floor(index);\n\n    if (index < 148) {\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[0].name,\n        index\n      );\n      this.textChange.current.innerHTML = this.props.sections[0].text; //text for each section\n    } else if (index >= 148 && index < 280) {\n      newIndex = index - 148;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[1].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.sections[1].text;\n    } else if (index >= 280 && index < 368) {\n      newIndex = index - 280;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[2].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.sections[2].text;\n    } else if (index >= 368 && index < 506) {\n      newIndex = index - 368;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[3].name,\n        newIndex\n      );\n      this.textChange.current.src = this.props.sections[3].text;\n    } else if (index >= 506 && index < 645) {\n      newIndex = index - 506;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[4].name,\n        newIndex\n      );\n      this.textChange.current.src = this.props.sections[4].text;\n    } else if (index >= 645 && index < 821) {\n      newIndex = index - 645;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[5].name,\n        newIndex\n      );\n    } else if (index >= 821 && index < 889) {\n      newIndex = index - 821;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[6].name,\n        newIndex\n      );\n    } else if (index >= 889 && index < 978) {\n      newIndex = index - 889;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[7].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = \"\"; //this section has no text\n    } else if (index >= 978 && index < 1212) {\n      newIndex = index - 978;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[8].name,\n        newIndex\n      );\n    } else {\n      newIndex = index - 1212;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.sections[9].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.sections[9].text;\n    }\n  };\n\n  render() {\n    return (\n      <section>\n        <div>\n          <div className=\"div-content\">\n            <p ref={this.textChange}></p>\n          </div>\n          <img className=\"responsive\" ref={this.imageRef} src=\"\"></img>\n        </div>\n      </section>\n    );\n  }\n}\n\n//select data from store that connected component needs\nconst mapStateToProps = (state) => ({\n  sections: state.sectionState.sections,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateSectionInfo: (data) => dispatch(sectionInfo(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainImage);\n"]},"metadata":{},"sourceType":"module"}