{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nconst GET_SECTION_DETAILS = gql`\n  query {\n    section {\n      name\n      text\n    }\n  }\n`;\nconst SET_SECTION_DETAILS = gql`\n  mutation UpdateSection($name: String!, $text: String!) {\n    updateSection(name: $name, text: $text) {\n      name\n      text\n    }\n  }\n`;\n\nconst SectionDetails = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_SECTION_DETAILS);\n\n  const updateCache = (cache, {\n    data: {\n      updateSection\n    }\n  }) => {\n    const existingSection = cache.readQuery({\n      query: GET_SECTION_DETAILS\n    });\n    cache.writeQuery({\n      query: GET_SECTION_DETAILS,\n      data: {\n        book: updateSection\n      }\n    });\n  };\n\n  const [updateSection] = useMutation(SET_SECTION_DETAILS, {\n    update: updateCache\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n\n  const updateSectionDetails = () => {\n    updateSection({\n      variables: {\n        name: \"11-test-section-update\",\n        author: \"Test successfull\"\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: updateSectionDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \" Update Sections\");\n};\n\nexport default SectionDetails;","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","useMutation","useQuery","GET_SECTION_DETAILS","SET_SECTION_DETAILS","SectionDetails","loading","error","data","updateCache","cache","updateSection","existingSection","readQuery","query","writeQuery","book","update","updateSectionDetails","variables","name","author"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,MAAMC,mBAAmB,GAAGH,GAAI;;;;;;;CAAhC;AASA,MAAMI,mBAAmB,GAAGJ,GAAI;;;;;;;CAAhC;;AASA,MAAMK,cAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,mBAAD,CAAzC;;AAEA,QAAMM,WAAW,GAAG,CAACC,KAAD,EAAQ;AAAEF,IAAAA,IAAI,EAAE;AAAEG,MAAAA;AAAF;AAAR,GAAR,KAAwC;AAC1D,UAAMC,eAAe,GAAGF,KAAK,CAACG,SAAN,CAAgB;AACtCC,MAAAA,KAAK,EAAEX;AAD+B,KAAhB,CAAxB;AAIAO,IAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,MAAAA,KAAK,EAAEX,mBADQ;AAEfK,MAAAA,IAAI,EAAE;AAAEQ,QAAAA,IAAI,EAAEL;AAAR;AAFS,KAAjB;AAID,GATD;;AAYA,QAAM,CAACA,aAAD,IAAkBV,WAAW,CAACG,mBAAD,EAAsB;AAAEa,IAAAA,MAAM,EAAER;AAAV,GAAtB,CAAnC;AAEA,MAAIH,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEX,QAAMW,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,aAAa,CAAC;AACZQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE;AAA1C;AADC,KAAD,CAAb;AAGD,GAJD;;AAOA,SACE;AAAQ,IAAA,OAAO,EAAEH,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,CA9BD;;AA+BA,eAAeb,cAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\nimport {useQuery} from \"@apollo/react-hooks\"\n\nconst GET_SECTION_DETAILS = gql`\n  query {\n    section {\n      name\n      text\n    }\n  }\n`;\n\nconst SET_SECTION_DETAILS = gql`\n  mutation UpdateSection($name: String!, $text: String!) {\n    updateSection(name: $name, text: $text) {\n      name\n      text\n    }\n  }\n`;\n\nconst SectionDetails = () => {\n  const { loading, error, data } = useQuery(GET_SECTION_DETAILS);\n\n  const updateCache = (cache, { data: { updateSection } }) => {\n    const existingSection = cache.readQuery({\n      query: GET_SECTION_DETAILS,\n    });\n    \n    cache.writeQuery({\n      query: GET_SECTION_DETAILS,\n      data: { book: updateSection },\n    });\n  };\n\n\n  const [updateSection] = useMutation(SET_SECTION_DETAILS, { update: updateCache });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const updateSectionDetails = () => {\n    updateSection({\n      variables: { name: \"11-test-section-update\", author: \"Test successfull\" },\n    });\n  };\n\n\n  return (\n    <button onClick={updateSectionDetails}> Update Sections</button>\n  )\n}\nexport default SectionDetails;\n"]},"metadata":{},"sourceType":"module"}