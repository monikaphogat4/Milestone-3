{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport sectionInfo from \"../redux/actions/index\";\n\nvar MainImage = /*#__PURE__*/function (_Component) {\n  _inherits(MainImage, _Component);\n\n  var _super = _createSuper(MainImage);\n\n  function MainImage(props) {\n    var _this;\n\n    _classCallCheck(this, MainImage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      window.addEventListener(\"scroll\", _this.handleScroll);\n      _this.imageRef.current.src = \"img/01-hero-lightpass/0000.jpg\";\n\n      _this.props.updateSectionInfo({\n        sections: [{\n          name: \"01-hero-lightpass\",\n          style: \"white\",\n          text: \"Active Noise Cancellation for immersive sound. Transparency mode for hearing what is happening around you.\"\n        }, {\n          name: \"02-head-bob-turn\",\n          text: \"Arrival of the fittest.\"\n        }, {\n          name: \"03-flip-for-guts\",\n          text: \"Sound that cuts out the noise.\"\n        }, {\n          name: \"04-explode-tips\",\n          text: \"Choose from three sizes of soft, flexible silicone tips that click into place. Find the best fit and get the best sound by using the Ear Tip Fit Test.\"\n        }, {\n          name: \"05-flip-for-nc\",\n          style: \"white\",\n          text: \"Enjoy superior sound quality with Adaptive EQ, which automatically tunes music to the shape of your ear for a rich, consistent listening experience.\"\n        }, {\n          name: \"06-transparency-head\"\n        }, {\n          name: \"07-flip-reveal-guts\",\n          style: \"white\"\n        }, {\n          name: \"08-turn-for-chip\"\n        }, {\n          name: \"09-scoop-turn\",\n          style: \"black\"\n        }, {\n          name: \"10-fall-into-case\",\n          style: \"white\",\n          text: \"Charge wirelessly. Use tirelessly.\"\n        }]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      window.removeEventListener(\"scroll\", _this.handleScroll);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function (e) {\n      var scrollThreshold = _this.state.scrollThreshold;\n      var newIndex;\n      var sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n\n      var index = sTop / scrollThreshold;\n      index = Math.floor(index);\n\n      if (index < 148) {\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[0].name, index);\n        _this.textChange.current.innerHTML = _this.props.sections[0].text; //text for each section\n      } else if (index >= 148 && index < 280) {\n        newIndex = index - 148;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[1].name, newIndex);\n        _this.textChange.current.innerHTML = _this.props.sections[1].text;\n      } else if (index >= 280 && index < 368) {\n        newIndex = index - 280;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[2].name, newIndex);\n        _this.textChange.current.innerHTML = _this.props.sections[2].text;\n      } else if (index >= 368 && index < 506) {\n        newIndex = index - 368;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[3].name, newIndex);\n        _this.textChange.current.src = _this.props.sections[3].text;\n      } else if (index >= 506 && index < 645) {\n        newIndex = index - 506;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[4].name, newIndex);\n        _this.textChange.current.src = _this.props.sections[4].text;\n      } else if (index >= 645 && index < 821) {\n        newIndex = index - 645;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[5].name, newIndex);\n      } else if (index >= 821 && index < 889) {\n        newIndex = index - 821;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[6].name, newIndex);\n      } else if (index >= 889 && index < 978) {\n        newIndex = index - 889;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[7].name, newIndex);\n        _this.textChange.current.innerHTML = \"\"; //this section has no text\n      } else if (index >= 978 && index < 1212) {\n        newIndex = index - 978;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[8].name, newIndex);\n      } else {\n        newIndex = index - 1212;\n        _this.imageRef.current.src = _this.getImagePath(_this.props.sections[9].name, newIndex);\n        _this.textChange.current.innerHTML = _this.props.sections[9].text;\n      }\n    });\n\n    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_this));\n    _this.imageRef = /*#__PURE__*/React.createRef();\n    _this.textChange = /*#__PURE__*/React.createRef();\n    _this.state = {\n      scrollThreshold: 10\n    };\n    return _this;\n  } // on DOM render  display default image\n\n\n  _createClass(MainImage, [{\n    key: \"getImagePath\",\n    //to create file path to be retrieved from Public folder\n    value: function getImagePath(section, index) {\n      var i = index / 10;\n      var fileName = \"\";\n\n      if (i >= 1) {\n        fileName = index > 99 ? \"0\".concat(index) : \"00\".concat(index);\n      } else {\n        fileName = \"000\".concat(index);\n      }\n\n      return \"/img/\".concat(section, \"/\").concat(fileName, \".jpg\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"section\", null, __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"div-content\"\n      }, __jsx(\"p\", {\n        ref: this.textChange\n      })), __jsx(\"img\", {\n        className: \"responsive\",\n        ref: this.imageRef,\n        src: \"\"\n      })));\n    }\n  }]);\n\n  return MainImage;\n}(Component); //select data from store that connected component needs\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    sections: state.sectionState.sections\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateSectionInfo: function updateSectionInfo(data) {\n      return dispatch(sectionInfo(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainImage);","map":null,"metadata":{},"sourceType":"module"}