{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateSection($name: String!, $text: String!) {\\n    updateSection(name: $name, text: $text) {\\n      name\\n      text\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\nvar SET_SECTION_DETAILS = gql(_templateObject());\n\nvar SectionDetails = function SectionDetails() {\n  _s();\n\n  var _useMutation = useMutation(SET_SECTION_DETAILS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateSection = _useMutation2[0];\n\n  var updateSectionDetails = function updateSectionDetails() {\n    updateSection({\n      variables: {\n        name: \"11-test-section-update\",\n        author: \"Test successfull\"\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: updateSectionDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \" Update Sections\");\n};\n\n_s(SectionDetails, \"VxkYBzLV2UD7hUezdF6EN3xPAgo=\", false, function () {\n  return [useMutation];\n});\n\n_c = SectionDetails;\nexport default SectionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionDetails\");","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","useMutation","SET_SECTION_DETAILS","SectionDetails","updateSection","updateSectionDetails","variables","name","author"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,IAAMC,mBAAmB,GAAGF,GAAH,mBAAzB;;AASA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,qBACHF,WAAW,CAACC,mBAAD,CADR;AAAA;AAAA,MACpBE,aADoB;;AAG3B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCD,IAAAA,aAAa,CAAC;AACZE,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE;AAA1C;AADC,KAAD,CAAb;AAGD,GAJD;;AAOA,SACE;AAAQ,IAAA,OAAO,EAAEH,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,CAbD;;GAAMF,c;UACoBF,W;;;KADpBE,c;AAcN,eAAeA,cAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\n\nconst SET_SECTION_DETAILS = gql`\n  mutation UpdateSection($name: String!, $text: String!) {\n    updateSection(name: $name, text: $text) {\n      name\n      text\n    }\n  }\n`;\n\nconst SectionDetails = () => {\n  const [updateSection] = useMutation(SET_SECTION_DETAILS);\n\n  const updateSectionDetails = () => {\n    updateSection({\n      variables: { name: \"11-test-section-update\", author: \"Test successfull\" },\n    });\n  };\n\n\n  return (\n    <button onClick={updateSectionDetails}> Update Sections</button>\n  )\n}\nexport default SectionDetails;\n"]},"metadata":{},"sourceType":"module"}