{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport MainImage from \"./MainImage\";\nimport { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\nimport { ApolloProvider } from \"react-apollo\";\nimport SectionDetails from \"./Sections\"; // import ApolloClient from \"apollo-boost\";\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\nfetch(\"http://localhost:3000/api/graphql-data'\", {\n  method: \"GET\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    query: `{sections {name}}`\n  })\n}).then(res => res.json); //Apollo provider -  enables all child components to access apollo client to send queries and mutations\n\nconst Index = () => {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }\n  }, __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(StickyNav, {\n    name: \"Airpods Pro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(SectionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(MainImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx"],"names":["Layout","StickyNav","Footer","MainImage","Fragment","Provider","store","ApolloProvider","SectionDetails","ApolloClient","createHttpLink","InMemoryCache","httpLink","uri","client","link","cache","fetch","method","headers","body","JSON","stringify","query","then","res","json","Index"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,cAAP,MAA2B,YAA3B,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAGA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFuB,CAAjB,CAAf;AAKAM,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,EAAAA,MAAM,EAAE,KADuC;AAE/CC,EAAAA,OAAO,EAAE;AAAC,oBAAgB;AAAjB,GAFsC;AAG/CC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AAClBC,IAAAA,KAAK,EAAG;AADU,GAAhB;AAHyC,CAA5C,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACC,IANnB,E,CAOA;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,SACF,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEb,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADJ,CADE;AAaD,CAdD;;AAeA,eAAeqB,KAAf","sourcesContent":["import Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport MainImage from \"./MainImage\";\nimport { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\nimport { ApolloProvider } from \"react-apollo\";\nimport SectionDetails from \"./Sections\";\n// import ApolloClient from \"apollo-boost\";\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { gql } from \"apollo-boost\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nfetch(\"http://localhost:3000/api/graphql-data'\", {\n  method: \"GET\",\n  headers: {\"Content-type\": \"application/json\"} ,\n  body: JSON.stringify ({\n      query: `{sections {name}}`\n  })\n}).then(res => res.json)\n//Apollo provider -  enables all child components to access apollo client to send queries and mutations\nconst Index = () => {\n  return (\n<ApolloProvider client={client}>\n    <Provider store={store}>\n      <Fragment>\n        <Layout />\n        <StickyNav name=\"Airpods Pro\" />\n        <SectionDetails/>\n        <MainImage />\n        <Footer />\n      </Fragment>\n    </Provider>\n    </ApolloProvider>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}