{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/apolloClientSection.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query AllSections {\\n    sections {\\n      name\\n      text\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery, gql } from \"@apollo/client\";\nvar SECTION_DETAILS = gql(_templateObject());\n\nfunction SectionDetails() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(SECTION_DETAILS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, \"Loading\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.sections.map(function (_ref) {\n    var name = _ref.name,\n        text = _ref.text;\n    return __jsx(\"div\", {\n      key: name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, name, \": \", text));\n  });\n}\n\n_s(SectionDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = SectionDetails;\nexport default SectionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionDetails\");","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/apolloClientSection.tsx"],"names":["useQuery","gql","SECTION_DETAILS","SectionDetails","loading","error","data","sections","map","name","text"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,IAAMC,eAAe,GAAGD,GAAH,mBAArB;;AASA,SAASE,cAAT,GAA0B;AAAA;;AAAA;;AAAA,kBACSH,QAAQ,CAACE,eAAD,CADjB;AAAA,MAChBE,OADgB,aAChBA,OADgB;AAAA,MACPC,KADO,aACPA,KADO;AAAA,MACAC,IADA,aACAA,IADA;;AAGxB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,IAAT,QAASA,IAAT;AAAA,WACvB;AAAK,MAAA,GAAG,EAAED,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,QACWC,IADX,CADF,CADuB;AAAA,GAAlB,CAAP;AAOD;;GAbQP,c;UAC0BH,Q;;;KAD1BG,c;AAeT,eAAeA,cAAf","sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst SECTION_DETAILS = gql`\n  query AllSections {\n    sections {\n      name\n      text\n    }\n  }\n`;\n\nfunction SectionDetails() {\n  const { loading, error, data } = useQuery(SECTION_DETAILS);\n\n  if (loading) return <p>Loading</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.sections.map(({ name, text }) => (\n    <div key={name}>\n      <p>\n        {name}: {text}\n      </p>\n    </div>\n  ));\n}\n\nexport default SectionDetails;\n"]},"metadata":{},"sourceType":"module"}