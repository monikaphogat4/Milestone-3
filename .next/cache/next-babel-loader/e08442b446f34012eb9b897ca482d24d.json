{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sample.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\n\nfunction TestImage({\n  data: {\n    loading,\n    sections\n  }\n}) {\n  this.handleScroll = this.handleScroll.bind(this);\n  this.imageRef = /*#__PURE__*/React.createRef();\n  this.textChange = /*#__PURE__*/React.createRef(); //to create file path to be retrieved from Public folder\n\n  const getImagePath = (section, index) => {\n    const i = index / 10;\n    let fileName = \"\";\n\n    if (i >= 1) {\n      fileName = index > 99 ? `0${index}` : `00${index}`;\n    } else {\n      fileName = `000${index}`;\n    }\n\n    return `/img/${section}/${fileName}.jpg`;\n  };\n\n  const handleScroll = e => {\n    const scrollThreshold = this.state.scrollThreshold;\n    let newIndex;\n    let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n\n    let index = sTop / scrollThreshold;\n    index = Math.floor(index);\n\n    if (this.props.data.loading) {\n      return console.log(\"Loading\");\n    }\n\n    if (index < 148) {\n      console.log(\"section 1\", this.props);\n      console.log(this.props.data.sections[0].name);\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[0].name, index);\n      this.textChange.current.innerHTML = this.props.data.sections[0].text; //text for each section\n    } else if (index >= 148 && index < 280) {\n      newIndex = index - 148;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[1].name, newIndex);\n      this.textChange.current.innerHTML = this.props.data.sections[1].text;\n    } else if (index >= 280 && index < 368) {\n      newIndex = index - 280;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[2].name, newIndex);\n      this.textChange.current.innerHTML = this.props.data.sections[2].text;\n    } else if (index >= 368 && index < 506) {\n      newIndex = index - 368;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[3].name, newIndex);\n      this.textChange.current.src = this.props.data.sections[3].text;\n    } else if (index >= 506 && index < 645) {\n      newIndex = index - 506;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[4].name, newIndex);\n      this.textChange.current.src = this.props.data.sections[4].text;\n    } else if (index >= 645 && index < 821) {\n      newIndex = index - 645;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[5].name, newIndex);\n    } else if (index >= 821 && index < 889) {\n      newIndex = index - 821;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[6].name, newIndex);\n    } else if (index >= 889 && index < 978) {\n      newIndex = index - 889;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[7].name, newIndex);\n      this.textChange.current.innerHTML = \"\"; //this section has no text\n    } else if (index >= 978 && index < 1212) {\n      newIndex = index - 978;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[8].name, newIndex);\n    } else {\n      newIndex = index - 1212;\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[9].name, newIndex);\n      this.textChange.current.innerHTML = this.props.data.sections[9].text;\n    }\n  };\n\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"div-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    ref: this.textChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), __jsx(\"img\", {\n    className: \"responsive\",\n    ref: this.imageRef,\n    src: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst sectionDetails = gql`\n  {\n    sections {\n      name\n      text\n    }\n  }\n`;\nexport default graphql(sectionDetails)(TestImage);","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sample.tsx"],"names":["React","gql","graphql","TestImage","data","loading","sections","handleScroll","bind","imageRef","createRef","textChange","getImagePath","section","index","i","fileName","e","scrollThreshold","state","newIndex","sTop","window","scrollY","Math","floor","props","console","log","name","current","src","innerHTML","text","sectionDetails"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql, useQuery, Query } from \"react-apollo\";\n\nfunction TestImage ( { data: { loading,sections}}){\n\n    this.handleScroll = this.handleScroll.bind(this);\n    this.imageRef = React.createRef();\n    this.textChange = React.createRef();\n\n\n  //to create file path to be retrieved from Public folder\n  const getImagePath = (section, index) =>{\n    const i = index / 10;\n    let fileName = \"\";\n\n    if (i >= 1) {\n      fileName = index > 99 ? `0${index}` : `00${index}`;\n    } else {\n      fileName = `000${index}`;\n    }\n    return `/img/${section}/${fileName}.jpg`;\n  }\n\n  const handleScroll = (e) => {\n    const scrollThreshold = this.state.scrollThreshold;\n\n    let newIndex;\n\n    let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n    let index = sTop / scrollThreshold;\n\n    index = Math.floor(index);\n\n    if(this.props.data.loading) {\n      return (console.log(\"Loading\"))\n    }\n\n  \n    if (index < 148) {\n  \n      console.log(\"section 1\",this.props);\n      console.log(this.props.data.sections[0].name);\n      this.imageRef.current.src = this.getImagePath(this.props.data.sections[0].name, index);\n      this.textChange.current.innerHTML = this.props.data.sections[0].text;\n      //text for each section\n    } else if (index >= 148 && index < 280) {\n      newIndex = index - 148;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[1].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[1].text;\n     } else if (index >= 280 && index < 368) {\n      newIndex = index - 280;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[2].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[2].text;\n    } else if (index >= 368 && index < 506) {\n      newIndex = index - 368;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[3].name,\n        newIndex\n      );\n      this.textChange.current.src = this.props.data.sections[3].text;\n    } else if (index >= 506 && index < 645) {\n      newIndex = index - 506;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[4].name,\n        newIndex\n      );\n      this.textChange.current.src = this.props.data.sections[4].text;\n    } else if (index >= 645 && index < 821) {\n      newIndex = index - 645;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[5].name,\n        newIndex\n      );\n    } else if (index >= 821 && index < 889) {\n      newIndex = index - 821;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[6].name,\n        newIndex\n      );\n    } else if (index >= 889 && index < 978) {\n      newIndex = index - 889;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[7].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = \"\"; //this section has no text\n    } else if (index >= 978 && index < 1212) {\n      newIndex = index - 978;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[8].name,\n        newIndex\n      );\n    } else {\n      newIndex = index - 1212;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[9].name,\n        newIndex\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[9].text;\n    }\n  };\n\n  \n    return (\n      <section>\n        <div>\n          <div className=\"div-content\">\n            <p ref={this.textChange}></p>\n          </div>\n          <img className=\"responsive\" ref={this.imageRef} src=\"\"></img>\n        </div>\n      </section>\n    );\n}\n\nconst sectionDetails = gql`\n  {\n    sections {\n      name\n      text\n    }\n  }\n`;\n\nexport default graphql(sectionDetails)(TestImage);\n"]},"metadata":{},"sourceType":"module"}