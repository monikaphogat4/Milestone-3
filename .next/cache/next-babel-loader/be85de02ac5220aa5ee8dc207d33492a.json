{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport { Component } from \"react\";\nconst SECTION_DETAILS = gql`\n{\n    sections {\n      name\n      text\n  }\n}\n`; // interface SectionType {\n//   data: object[]\n// }\n// const linksToRender = [\n//   {\n//     \"name\": \"Prisma turns your database into a GraphQL API \",\n//     \"text\": \"https://www.prismagraphql.com\",\n//   },\n//   {\n//     \"name\": \"The best GraphQL client\",\n//     \"text\": \"ttps://www.apollographql.com/docs/react/\",\n//   },\n// ]\n\nclass SectionDetails extends Component {\n  // displaySections() {\n  //     var data = this.props.data;\n  //     // if(data.loading){\n  //     //     return( <div>Loading sections</div> );\n  //     // } \n  //     // else {\n  //     //     return data.sections.map(section => {\n  //     //         return( <li key={section.id}>{ section.name }</li> );\n  //     //     });\n  //     // }\n  // }\n  render() {\n    console.log(this.props);\n    return __jsx(Query, {\n      query: SECTION_DETAILS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 31\n        }\n      }, \"Fetching\");\n      if (error) return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, \"Error\");\n      const sectionInfo = data.sections;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, sectionInfo.map(section => __jsx(\"dev\", {\n        key: section.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }\n      })));\n    });\n  }\n\n} // <div>\n//   {linksToRender.map((section) => <div key={section.name}>{section.name}</div>)}\n// </div>\n// {/* <ul id=\"sections-list\">\n//     {/* {this.displaySections()} */}\n//   </ul> */}\n//     );\n//   }\n// }\n// export default graphql(SECTION_DETAILS)(SectionDetails);\n\n\nexport default SectionDetails;","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","Query","Component","SECTION_DETAILS","SectionDetails","render","console","log","props","loading","error","data","sectionInfo","sections","map","section","name"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAA4BC,KAA5B,QAAyC,cAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;CAA5B,C,CASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,cAAN,SAA6BF,SAA7B,CAAuC;AACrC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEL,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,UAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,YAAME,WAAW,GAAGD,IAAI,CAACE,QAAzB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,WAAW,CAACE,GAAZ,CAAgBC,OAAO,IAAI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,CADH,CADF;AAKD,KAXH,CADF;AAeG;;AAhCgC,C,CAmCjC;AACA;AAEA;AACA;AACA;AAEA;AACN;AACA;AACA;AAEA;;;AACA,eAAeZ,cAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { graphql, useQuery, Query } from \"react-apollo\";\nimport { Component } from \"react\";\n\nconst SECTION_DETAILS = gql`\n{\n    sections {\n      name\n      text\n  }\n}\n`;\n\n// interface SectionType {\n//   data: object[]\n\n// }\n// const linksToRender = [\n//   {\n//     \"name\": \"Prisma turns your database into a GraphQL API \",\n//     \"text\": \"https://www.prismagraphql.com\",\n//   },\n//   {\n//     \"name\": \"The best GraphQL client\",\n//     \"text\": \"ttps://www.apollographql.com/docs/react/\",\n//   },\n// ]\n\nclass SectionDetails extends Component {\n  // displaySections() {\n  //     var data = this.props.data;\n\n  //     // if(data.loading){\n  //     //     return( <div>Loading sections</div> );\n  //     // } \n  //     // else {\n  //     //     return data.sections.map(section => {\n  //     //         return( <li key={section.id}>{ section.name }</li> );\n  //     //     });\n  //     // }\n  // }\n\n\n  render() {\n    console.log(this.props);\n    return (\n      <Query query={SECTION_DETAILS}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>\n          if (error) return <div>Error</div>\n    \n          const sectionInfo = data.sections\n          return (\n            <div>\n              {sectionInfo.map(section => <dev key={section.name} />)}\n            </div>\n          )\n        }}\n      </Query>\n    )\n      }\n    }\n      \n      // <div>\n      //   {linksToRender.map((section) => <div key={section.name}>{section.name}</div>)}\n        \n      // </div>\n      // {/* <ul id=\"sections-list\">\n      //     {/* {this.displaySections()} */}\n          \n      //   </ul> */}\n//     );\n//   }\n// }\n\n// export default graphql(SECTION_DETAILS)(SectionDetails);\nexport default SectionDetails;\n"]},"metadata":{},"sourceType":"module"}