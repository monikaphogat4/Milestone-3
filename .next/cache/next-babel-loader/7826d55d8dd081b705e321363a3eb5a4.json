{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport { Fragment } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport TestImage from \"./Sample\";\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n}); //Apollo provider -  enables all child components to access apollo client to send queries and mutations\n\nconst Index = () => {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }\n  }, __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(StickyNav, {\n    name: \"Airpods Pro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(TestImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx"],"names":["Layout","StickyNav","Footer","Fragment","ApolloProvider","TestImage","ApolloClient","createHttpLink","InMemoryCache","httpLink","uri","client","link","cache","Index"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAGA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;;AACA,MAAMM,KAAK,GAAG,MAAM;AAClB,SACF,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADN,CADE;AAWD,CAZD;;AAaA,eAAeG,KAAf","sourcesContent":["import Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport MainImage from \"./MainImage\";\nimport { Fragment } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport SectionDetails from \"./Sections\";\nimport TestImage from \"./Sample\";\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { gql } from \"apollo-boost\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\n//Apollo provider -  enables all child components to access apollo client to send queries and mutations\nconst Index = () => {\n  return (\n<ApolloProvider client={client}>\n      <Fragment>\n        <Layout />\n        <StickyNav name=\"Airpods Pro\" />\n       <TestImage />\n        {/* <MainImage /> */}\n        <Footer />\n      </Fragment>\n    </ApolloProvider>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}