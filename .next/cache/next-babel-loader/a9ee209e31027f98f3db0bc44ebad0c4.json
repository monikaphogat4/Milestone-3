{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport { Component } from \"react\";\nconst SECTION_DETAILS = gql`\n  query AllSections {\n    sections {\n      name\n      text\n    }\n  }\n`;\n\nclass SectionDetails extends Component {\n  displaySections() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 19\n        }\n      }, \"Loading sections\");\n    } else {\n      return data.sections.map(section => {\n        return __jsx(\"div\", {\n          key: section.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 23\n          }\n        }, section.name);\n      });\n    }\n  } // displaySections() {\n  //   var data = this.props.data;\n  //   if (data.loading) {\n  //     return <div>loading books...</div>;\n  //   } else {\n  //     data.sections.map((section) => {\n  //       return (\n  //         <li key={section.id}>{section.name}</li>\n  //       )\n  //     });\n  //   }\n  // }\n\n\n  render() {\n    console.log(\"These are\", this.props);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(\"ul\", {\n      id: \"sections-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default graphql(SECTION_DETAILS)(SectionDetails);","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","graphql","Component","SECTION_DETAILS","SectionDetails","displaySections","data","props","loading","sections","map","section","id","name","render","console","log"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAkC,cAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;CAA5B;;AASA,MAAMI,cAAN,SAA6BF,SAA7B,CAAuC;AAErCG,EAAAA,eAAe,GAAG;AACd,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAGA,IAAI,CAACE,OAAR,EAAgB;AACZ,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR;AACH,KAFD,MAEO;AACH,aAAOF,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IAAI;AAChC,eAAQ;AAAK,UAAA,GAAG,EAAGA,OAAO,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BD,OAAO,CAACE,IAAlC,CAAR;AACH,OAFM,CAAP;AAGH;AACJ,GAXoC,CAarC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKT,KAA9B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AApCoC;;AAuCvC,eAAeN,OAAO,CAACE,eAAD,CAAP,CAAyBC,cAAzB,CAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { graphql, useQuery } from \"react-apollo\";\nimport { Component } from \"react\";\n\nconst SECTION_DETAILS = gql`\n  query AllSections {\n    sections {\n      name\n      text\n    }\n  }\n`;\n\nclass SectionDetails extends Component {\n\n  displaySections() {\n      var data = this.props.data;\n      if(data.loading){\n          return( <div>Loading sections</div> );\n      } else {\n          return data.sections.map(section => {\n              return( <div key={ section.id }>{ section.name }</div> );\n          });\n      }\n  }\n\n  // displaySections() {\n  //   var data = this.props.data;\n\n  //   if (data.loading) {\n  //     return <div>loading books...</div>;\n  //   } else {\n  //     data.sections.map((section) => {\n  //       return (\n  //         <li key={section.id}>{section.name}</li>\n  //       )\n        \n  //     });\n  //   }\n  // }\n  render() {\n    console.log(\"These are\", this.props);\n    return (\n      <div>\n        <ul id=\"sections-list\">\n          {/* {this.displaySections()} */}\n          </ul>\n      </div>\n    );\n  }\n}\n\nexport default graphql(SECTION_DETAILS)(SectionDetails);\n"]},"metadata":{},"sourceType":"module"}