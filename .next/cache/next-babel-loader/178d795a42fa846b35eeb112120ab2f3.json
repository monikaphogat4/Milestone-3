{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport MainImage from \"./MainImage\";\nimport { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\nimport { ApolloProvider } from \"react-apollo\";\nimport SectionDetails from \"./Sections\"; // import ApolloClient from \"apollo-boost\";\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { gql } from \"apollo-boost\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n}); // const client = new ApolloClient({\n//   uri: \"http://localhost:3000/api/graphql-data\",\n// });\n\nclient.query({\n  query: gql`\n    {\n      sections {\n        name\n      }\n    }\n  `\n}).then(response => console.log(response.data.name)); //Apollo provider -  enables all child components to access apollo client to send queries and mutations\n\nconst Index = () => {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(StickyNav, {\n    name: \"Airpods Pro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(SectionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(MainImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Index.tsx"],"names":["Layout","StickyNav","Footer","MainImage","Fragment","Provider","store","ApolloProvider","SectionDetails","ApolloClient","createHttpLink","InMemoryCache","gql","httpLink","uri","client","link","cache","query","then","response","console","log","data","name","Index"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,cAAP,MAA2B,YAA3B,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf,C,CAKA;AACA;AACA;;AACAI,MAAM,CAACG,KAAP,CAAa;AACXA,EAAAA,KAAK,EAAEN,GAAI;;;;;;;AADA,CAAb,EAQGO,IARH,CAQQC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,IAA1B,CARpB,E,CAUA;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,SACF,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADJ,CADE;AAaD,CAdD;;AAeA,eAAemB,KAAf","sourcesContent":["import Layout from \"./Layout\";\nimport StickyNav from \"./StickyNav\";\nimport Footer from \"./Footer\";\nimport MainImage from \"./MainImage\";\nimport { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"../redux/store\";\nimport { ApolloProvider } from \"react-apollo\";\nimport SectionDetails from \"./Sections\";\n// import ApolloClient from \"apollo-boost\";\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { gql } from \"apollo-boost\";\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3000/api/graphql-data'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:3000/api/graphql-data\",\n// });\nclient.query({\n  query: gql`\n    {\n      sections {\n        name\n      }\n    }\n  `\n}).then(response => console.log(response.data.name))\n\n//Apollo provider -  enables all child components to access apollo client to send queries and mutations\nconst Index = () => {\n  return (\n<ApolloProvider client={client}>\n    <Provider store={store}>\n      <Fragment>\n        <Layout />\n        <StickyNav name=\"Airpods Pro\" />\n        <SectionDetails/>\n        <MainImage />\n        <Footer />\n      </Fragment>\n    </Provider>\n    </ApolloProvider>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}