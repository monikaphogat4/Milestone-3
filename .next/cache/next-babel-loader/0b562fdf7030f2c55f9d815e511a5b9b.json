{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateSection($name: String!, $text: String!) {\\n    updateSection(name: $name, text: $text) {\\n      name\\n      text\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    section {\\n      name\\n      text\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\nimport { useQuery } from \"@apollo/react-hooks\";\nvar GET_SECTION_DETAILS = gql(_templateObject());\nvar SET_SECTION_DETAILS = gql(_templateObject2());\n\nvar SectionDetails = function SectionDetails() {\n  _s();\n\n  var _useQuery = useQuery(GET_SECTION_DETAILS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var updateCache = function updateCache(cache, _ref) {\n    var updateSection = _ref.data.updateSection;\n    var existingSection = cache.readQuery({\n      query: GET_SECTION_DETAILS\n    });\n    cache.writeQuery({\n      query: GET_SECTION_DETAILS,\n      data: {\n        book: updateSection\n      }\n    });\n  };\n\n  var _useMutation = useMutation(SET_SECTION_DETAILS, {\n    update: updateCache\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateSection = _useMutation2[0];\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n\n  var updateSectionDetails = function updateSectionDetails() {\n    updateSection({\n      variables: {\n        name: \"11-test-section-update\",\n        author: \"Test successfull\"\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: updateSectionDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \" Update Sections\");\n};\n\n_s(SectionDetails, \"FzB4Mg2aMYm4MH8s17VwMXnXZZw=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = SectionDetails;\nexport default SectionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionDetails\");","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","useMutation","useQuery","GET_SECTION_DETAILS","SET_SECTION_DETAILS","SectionDetails","loading","error","data","updateCache","cache","updateSection","existingSection","readQuery","query","writeQuery","book","update","updateSectionDetails","variables","name","author"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA,IAAMC,mBAAmB,GAAGH,GAAH,mBAAzB;AASA,IAAMI,mBAAmB,GAAGJ,GAAH,oBAAzB;;AASA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,kBACMH,QAAQ,CAACC,mBAAD,CADd;AAAA,MACnBG,OADmB,aACnBA,OADmB;AAAA,MACVC,KADU,aACVA,KADU;AAAA,MACHC,IADG,aACHA,IADG;;AAG3B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,QAAwC;AAAA,QAAtBC,aAAsB,QAA9BH,IAA8B,CAAtBG,aAAsB;AAC1D,QAAMC,eAAe,GAAGF,KAAK,CAACG,SAAN,CAAgB;AACtCC,MAAAA,KAAK,EAAEX;AAD+B,KAAhB,CAAxB;AAIAO,IAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,MAAAA,KAAK,EAAEX,mBADQ;AAEfK,MAAAA,IAAI,EAAE;AAAEQ,QAAAA,IAAI,EAAEL;AAAR;AAFS,KAAjB;AAID,GATD;;AAH2B,qBAeHV,WAAW,CAACG,mBAAD,EAAsB;AAAEa,IAAAA,MAAM,EAAER;AAAV,GAAtB,CAfR;AAAA;AAAA,MAepBE,aAfoB;;AAiB3B,MAAIL,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEX,MAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCP,IAAAA,aAAa,CAAC;AACZQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE;AAA1C;AADC,KAAD,CAAb;AAGD,GAJD;;AAOA,SACE;AAAQ,IAAA,OAAO,EAAEH,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD,CA9BD;;GAAMb,c;UAC6BH,Q,EAcTD,W;;;KAfpBI,c;AA+BN,eAAeA,cAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo\";\nimport {useQuery} from \"@apollo/react-hooks\"\n\nconst GET_SECTION_DETAILS = gql`\n  query {\n    section {\n      name\n      text\n    }\n  }\n`;\n\nconst SET_SECTION_DETAILS = gql`\n  mutation UpdateSection($name: String!, $text: String!) {\n    updateSection(name: $name, text: $text) {\n      name\n      text\n    }\n  }\n`;\n\nconst SectionDetails = () => {\n  const { loading, error, data } = useQuery(GET_SECTION_DETAILS);\n\n  const updateCache = (cache, { data: { updateSection } }) => {\n    const existingSection = cache.readQuery({\n      query: GET_SECTION_DETAILS,\n    });\n    \n    cache.writeQuery({\n      query: GET_SECTION_DETAILS,\n      data: { book: updateSection },\n    });\n  };\n\n\n  const [updateSection] = useMutation(SET_SECTION_DETAILS, { update: updateCache });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const updateSectionDetails = () => {\n    updateSection({\n      variables: { name: \"11-test-section-update\", author: \"Test successfull\" },\n    });\n  };\n\n\n  return (\n    <button onClick={updateSectionDetails}> Update Sections</button>\n  )\n}\nexport default SectionDetails;\n"]},"metadata":{},"sourceType":"module"}