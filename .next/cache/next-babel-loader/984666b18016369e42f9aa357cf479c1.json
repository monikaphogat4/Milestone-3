{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport { Component } from \"react\";\nconst SECTION_DETAILS = gql`\n{\n    sections {\n      name\n      text\n  }\n}\n`; // interface SectionType {\n//   data: object[]\n// }\n\nconst linksToRender = [{\n  \"name\": \"Prisma turns your database into a GraphQL API \",\n  \"text\": \"https://www.prismagraphql.com\"\n}, {\n  \"name\": \"The best GraphQL client\",\n  \"text\": \"ttps://www.apollographql.com/docs/react/\"\n}];\n\nclass SectionDetails extends Component {\n  // displaySections() {\n  //     var data = this.props.data;\n  //     // if(data.loading){\n  //     //     return( <div>Loading sections</div> );\n  //     // } \n  //     // else {\n  //     //     return data.sections.map(section => {\n  //     //         return( <li key={section.id}>{ section.name }</li> );\n  //     //     });\n  //     // }\n  // }\n  render() {\n    console.log(this.props);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, linksToRender.map(section => __jsx(\"div\", {\n      key: section.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, section.name))) // {/* <ul id=\"sections-list\">\n    //     {/* {this.displaySections()} */}\n    //   </ul> */}\n    ;\n  }\n\n}\n\nexport default graphql(SECTION_DETAILS)(SectionDetails);","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/Sections.tsx"],"names":["gql","graphql","Component","SECTION_DETAILS","linksToRender","SectionDetails","render","console","log","props","map","section","name"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAkC,cAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,eAAe,GAAGH,GAAI;;;;;;;CAA5B,C,CASA;AACA;AAEA;;AACA,MAAMI,aAAa,GAAG,CACpB;AACE,UAAQ,gDADV;AAEE,UAAQ;AAFV,CADoB,EAKpB;AACE,UAAQ,yBADV;AAEE,UAAQ;AAFV,CALoB,CAAtB;;AAWA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACrC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAI,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,aAAa,CAACM,GAAd,CAAmBC,OAAD,IAAa;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,OAAO,CAACC,IAAjC,CAA/B,CADH,CADF,CAKE;AACA;AAEA;AARF;AAUD;;AA3BoC;;AA8BvC,eAAeX,OAAO,CAACE,eAAD,CAAP,CAAyBE,cAAzB,CAAf","sourcesContent":["import { gql } from \"apollo-boost\";\nimport { graphql, useQuery } from \"react-apollo\";\nimport { Component } from \"react\";\n\nconst SECTION_DETAILS = gql`\n{\n    sections {\n      name\n      text\n  }\n}\n`;\n\n// interface SectionType {\n//   data: object[]\n\n// }\nconst linksToRender = [\n  {\n    \"name\": \"Prisma turns your database into a GraphQL API \",\n    \"text\": \"https://www.prismagraphql.com\",\n  },\n  {\n    \"name\": \"The best GraphQL client\",\n    \"text\": \"ttps://www.apollographql.com/docs/react/\",\n  },\n]\n\nclass SectionDetails extends Component {\n  // displaySections() {\n  //     var data = this.props.data;\n\n  //     // if(data.loading){\n  //     //     return( <div>Loading sections</div> );\n  //     // } \n  //     // else {\n  //     //     return data.sections.map(section => {\n  //     //         return( <li key={section.id}>{ section.name }</li> );\n  //     //     });\n  //     // }\n  // }\n\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        {linksToRender.map((section) => <div key={section.name}>{section.name}</div>)}\n        \n      </div>\n      // {/* <ul id=\"sections-list\">\n      //     {/* {this.displaySections()} */}\n          \n      //   </ul> */}\n    );\n  }\n}\n\nexport default graphql(SECTION_DETAILS)(SectionDetails);\n"]},"metadata":{},"sourceType":"module"}