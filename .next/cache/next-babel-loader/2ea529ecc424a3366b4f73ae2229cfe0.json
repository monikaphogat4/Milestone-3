{"ast":null,"code":"var _jsxFileName = \"/Users/m0p024f/WebstormProjects/Milestone 3/components/MainImage.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport Head from \"next/head\";\nimport images from \"./ImageUrls\";\n\nclass MainImage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"imageRef\", void 0);\n\n    _defineProperty(this, \"textChange\", void 0);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      window.addEventListener(\"scroll\", this.handleScroll);\n      this.imageRef.current.src = \"img/01-hero-lightpass/0000.jpg\";\n      this.fetchData();\n    });\n\n    _defineProperty(this, \"componentWillUnmount\", () => {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    });\n\n    _defineProperty(this, \"handleScroll\", () => {\n      const scrollThreshold = this.state.scrollThreshold;\n      let newIndex;\n      let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n\n      let index = sTop / scrollThreshold;\n      index = Math.floor(index);\n\n      if (this.props.data.loading) {\n        return console.log(\"Loading\");\n      }\n\n      if (index < 148) {\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[0].name, index, this.props.data.sections[0].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[0].text; //text for each section\n      } else if (index >= 148 && index < 280) {\n        newIndex = index - 148;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[1].name, newIndex, this.props.data.sections[1].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[1].text;\n      } else if (index >= 280 && index < 368) {\n        newIndex = index - 280;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[2].name, newIndex, this.props.data.sections[2].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[2].text;\n      } else if (index >= 368 && index < 506) {\n        newIndex = index - 368;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[3].name, newIndex, this.props.data.sections[3].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[3].text;\n      } else if (index >= 506 && index < 645) {\n        newIndex = index - 506;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[4].name, newIndex, this.props.data.sections[4].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[4].text;\n      } else if (index >= 645 && index < 821) {\n        newIndex = index - 645;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[5].name, newIndex, this.props.data.sections[5].baseUrl);\n      } else if (index >= 821 && index < 889) {\n        newIndex = index - 821;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[6].name, newIndex, this.props.data.sections[6].baseUrl);\n      } else if (index >= 889 && index < 978) {\n        newIndex = index - 889;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[7].name, newIndex, this.props.data.sections[7].baseUrl);\n        this.textChange.current.innerHTML = \"\"; //this section has no text\n      } else if (index >= 978 && index < 1212) {\n        newIndex = index - 978;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[8].name, newIndex, this.props.data.sections[8].baseUrl);\n      } else {\n        newIndex = index - 1212;\n        this.imageRef.current.src = this.getImagePath(this.props.data.sections[9].name, newIndex, this.props.data.sections[9].baseUrl);\n        this.textChange.current.innerHTML = this.props.data.sections[9].text;\n      }\n    });\n\n    this.handleScroll = this.handleScroll.bind(this);\n    this.imageRef = /*#__PURE__*/React.createRef();\n    this.textChange = /*#__PURE__*/React.createRef();\n    this.state = {\n      scrollThreshold: 10,\n      loading: false,\n      data: null\n    };\n  } // on DOM render  display default image\n\n\n  fetchData() {\n    fetch(\"/api/graphql-data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: \"{ sections { name } }\"\n      })\n    }).then(res => res.json()).then(res => this.setState({\n      data: res.data\n    }));\n  } //to create file path to be retrieved from Public folder\n\n\n  getImagePath(section, index, baseUrl) {\n    let fileName = \"\";\n    fileName = index.toString().padStart(4, \"000\");\n    console.log(`${baseUrl}/${section}/${fileName}.jpg`);\n    return `${baseUrl}/${section}/${fileName}.jpg`;\n  }\n\n  render() {\n    const href = images.map(image => {});\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, \"images.map(image => \", \") children=\", __jsx(\"link\", {\n      rel: \"preload\",\n      as: \"image\",\n      href: \"this.props.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })), __jsx(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"div-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      ref: this.textChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    })), __jsx(\"img\", {\n      className: \"responsive\",\n      ref: this.imageRef,\n      src: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst GET_SECTION_DETAILS = gql`\n  {\n    sections {\n      name\n      text\n      baseUrl\n    }\n  }\n`;\nexport default graphql(GET_SECTION_DETAILS)(MainImage);","map":{"version":3,"sources":["/Users/m0p024f/WebstormProjects/Milestone 3/components/MainImage.tsx"],"names":["React","Component","gql","graphql","Head","images","MainImage","constructor","props","window","addEventListener","handleScroll","imageRef","current","src","fetchData","removeEventListener","scrollThreshold","state","newIndex","sTop","scrollY","index","Math","floor","data","loading","console","log","getImagePath","sections","name","baseUrl","textChange","innerHTML","text","bind","createRef","fetch","method","headers","body","JSON","stringify","query","then","res","json","setState","section","fileName","toString","padStart","render","href","map","image","GET_SECTION_DETAILS"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { graphql } from \"react-apollo\";\nimport Head from \"next/head\";\nimport images from \"./ImageUrls\"\n\n\ntype Section = { name: string, text: string , baseUrl: string}\n\n\n// const imgArray =[\"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large//01-hero-lightpass/0000.jpg\",\n//   \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large//01-hero-lightpass/0001.jpg\",\n// \"https://www.apple.com/105/media/us/airpods-pro/2019/1299e2f5_9206_4470_b28e_08307a42f19b/anim/sequence/large//01-hero-lightpass/0002.jpg\"]\n\ninterface ImageComponentProps {\n  data: {loading: boolean, sections: Section[] };\n  loading: boolean;\n  sections: string[]\n}\n\ninterface ImageComponentState {\n  scrollThreshold: number;\n  loading: boolean;\n  data: {loading: boolean};\n}\n\nclass MainImage extends Component<ImageComponentProps, ImageComponentState> {\n  imageRef: React.RefObject<HTMLImageElement>;\n  textChange: React.RefObject<HTMLParagraphElement>;\n\n  constructor(props) {\n    super(props);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.imageRef = React.createRef();\n    this.textChange = React.createRef();\n\n    this.state = {\n      scrollThreshold: 10,\n      loading: false,\n      data: null,\n    };\n  }\n\n  // on DOM render  display default image\n  componentDidMount = () => {\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.imageRef.current.src = \"img/01-hero-lightpass/0000.jpg\";\n    this.fetchData();\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  };\n\n  fetchData() {\n    fetch(\"/api/graphql-data\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: \"{ sections { name } }\" }),\n    })\n      .then((res) => res.json())\n      .then((res) => this.setState({ data: res.data }));\n  }\n\n  //to create file path to be retrieved from Public folder\n  getImagePath(section, index, baseUrl) {\n    let fileName = \"\";\n    fileName = index.toString().padStart(4, \"000\");\n\n    console.log(`${baseUrl}/${section}/${fileName}.jpg`)\n    return `${baseUrl}/${section}/${fileName}.jpg`;\n  }\n\n  handleScroll = () => {\n    const scrollThreshold = this.state.scrollThreshold;\n\n    let newIndex;\n    let sTop = window.scrollY; //number of pixels document is currently scrolled vertically\n    let index = sTop / scrollThreshold;\n\n    index = Math.floor(index);\n\n    if (this.props.data.loading) {\n      return console.log(\"Loading\");\n    }\n\n    if (index < 148) {\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[0].name,\n        index,\n        this.props.data.sections[0].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[0].text;\n      //text for each section\n    } else if (index >= 148 && index < 280) {\n      newIndex = index - 148;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[1].name,\n        newIndex,\n        this.props.data.sections[1].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[1].text;\n    } else if (index >= 280 && index < 368) {\n      newIndex = index - 280;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[2].name,\n        newIndex,\n        this.props.data.sections[2].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[2].text;\n    } else if (index >= 368 && index < 506) {\n      newIndex = index - 368;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[3].name,\n        newIndex,\n        this.props.data.sections[3].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[3].text;\n    } else if (index >= 506 && index < 645) {\n      newIndex = index - 506;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[4].name,\n        newIndex,\n        this.props.data.sections[4].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[4].text;\n    } else if (index >= 645 && index < 821) {\n      newIndex = index - 645;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[5].name,\n        newIndex,\n        this.props.data.sections[5].baseUrl\n      );\n    } else if (index >= 821 && index < 889) {\n      newIndex = index - 821;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[6].name,\n        newIndex,\n        this.props.data.sections[6].baseUrl\n      );\n    } else if (index >= 889 && index < 978) {\n      newIndex = index - 889;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[7].name,\n        newIndex,\n        this.props.data.sections[7].baseUrl\n      );\n      this.textChange.current.innerHTML = \"\"; //this section has no text\n    } else if (index >= 978 && index < 1212) {\n      newIndex = index - 978;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[8].name,\n        newIndex,\n        this.props.data.sections[8].baseUrl\n      );\n    } else {\n      newIndex = index - 1212;\n      this.imageRef.current.src = this.getImagePath(\n        this.props.data.sections[9].name,\n        newIndex,\n        this.props.data.sections[9].baseUrl\n      );\n      this.textChange.current.innerHTML = this.props.data.sections[9].text;\n    }\n  };\n\n  render() {\n    const href = images.map(image => {})\n   \n    return (\n      <div>\n      <Head >\n        images.map(image => {})\n      children={<link rel=\"preload\" as=\"image\" href=\"this.props.\" />}\n      </Head>\n      <section>\n        <div>\n          <div className=\"div-content\">\n            <p ref={this.textChange}></p>\n          </div>\n          <img className=\"responsive\" ref={this.imageRef} src=\"\"></img>\n        </div>\n      </section>\n      </div>\n    );\n  }\n}\n\nconst GET_SECTION_DETAILS = gql`\n  {\n    sections {\n      name\n      text\n      baseUrl\n    }\n  }\n`;\n\nexport default graphql(GET_SECTION_DETAILS)(MainImage as any);\n"]},"metadata":{},"sourceType":"module"}